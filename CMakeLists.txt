cmake_minimum_required(VERSION 2.6)
project(TimeSync)
add_definitions(-std=c++11)
#submodules
add_subdirectory(FitGen)
add_subdirectory(j-pet-framework)
message(${Framework_INCLUDE_DIRS})
include_directories(${Framework_INCLUDE_DIRS})
include_directories(j-pet-framework)
add_definitions(${Framework_DEFINITIONS})
include_directories(${FITGEN_INC})
include_directories(${CMAKE_CURRENT_SOURCE_DIR})
include_directories(${ROOT_INCLUDE_DIR})

#Common libraries
file(GLOB IO IO/*.cpp)
add_library(timesyncio ${IO})
file(GLOB PRESELECT Preselection/*.cpp)
add_library(preselectionlib STATIC ${PRESELECT})
target_link_libraries(preselectionlib JPetFramework timesyncio)
file(GLOB CALC Calc/*.cpp)
add_library(timesynccalc ${CALC})

#Colimator
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/AppSyncWithColimator/large_barrel.json DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/AppSyncWithColimator)
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/AppSyncWithColimator/conf_trb3.xml DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/AppSyncWithColimator)
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/AppSyncWithColimator/analyse-prepare.sh DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/AppSyncWithColimator)
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/AppSyncWithColimator/analyse-sync.sh DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/AppSyncWithColimator)
file(GLOB COLIMATOR AppSyncWithColimator/*.cpp)
foreach(example ${COLIMATOR})
    get_filename_component(ex_app ${example} NAME_WE)
    add_executable(AppSyncWithColimator/${ex_app} ${example})
    target_link_libraries(AppSyncWithColimator/${ex_app} timesynccalc timesyncio FitGen gpwrap preselectionlib JPetFramework)
endforeach()

#Reference detector
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/AppSyncWithRef/large_barrel.json DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/AppSyncWithRef)
file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/AppSyncWithRef/conf_trb3.xml DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/AppSyncWithRef)
file(GLOB REFERENCE AppSyncWithRef/*.cpp)
foreach(example ${REFERENCE})
    get_filename_component(ex_app ${example} NAME_WE)
    add_executable(AppSyncWithRef/${ex_app} ${example})
    target_link_libraries(AppSyncWithRef/${ex_app} timesynccalc timesyncio FitGen gpwrap preselectionlib JPetFramework)
endforeach()
